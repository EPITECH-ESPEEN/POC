services:
  db:
    image: mysql:9.0.1
    env_file:
      - ./.env
    container_name: area-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
    networks:
      area:
        ipv4_address: ${DB_HOST}
    volumes:
      - "./data/db/:/var/lib/mysql"

  backend:
    build:
      context: ./
      dockerfile: Dockerfile-prod
    env_file:
      - ./frontend/.env
    container_name: area-backend
    restart: unless-stopped
    environment:
      FLASK_RUN_HOST: "0.0.0.0"
      FLASK_RUN_PORT: ${BACK_PORT}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
    networks:
      area:
        ipv4_address: ${BACK_HOST}
    volumes:
      - "./data/images/:/usr/src/app/images/"
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend/
    env_file:
      - ./frontend/.env
    container_name: area-frontend
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      API_BASE_URL: ${LOCAL_API_BASE_URL}
      PORT: ${FRONT_PORT}
    networks:
      area:
        ipv4_address: ${FRONT_HOST}
    volumes:
      - "./data/images/:/usr/src/app/images/"
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    depends_on:
      - db
      - backend

networks:
  area:
    external: true
    name: area